name: deploy-runpod

on:
  workflow_dispatch:
    inputs:
      pod_name:
        description: "RunPod pod name"
        required: true
        default: "ari-ultimate"
      wait_ready_secs:
        description: "Seconds to wait for pod to be ready (0 = don't wait)"
        required: false
        default: "600"
      check_ports:
        description: "Check exposed ports after launch (true/false)"
        required: false
        default: "true"
      idle_minutes:
        description: "Auto-stop if idle for N minutes (0 to disable)"
        required: false
        default: "30"

jobs:
  deploy:
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    env:
      POD_NAME: ${{ github.event.inputs.pod_name }}
      WAIT_READY_SECS: ${{ github.event.inputs.wait_ready_secs }}
      CHECK_PORTS: ${{ github.event.inputs.check_ports }}
      IDLE_MINUTES: ${{ github.event.inputs.idle_minutes }}

      # API base can be overridden if needed (e.g. for staging); leave default as RunPod public API.
      RUNPOD_API_BASE: https://api.runpod.io

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install -r requirements.txt

      - name: Debug pod_config.json
        shell: bash
        run: |
          set -x
          ls -la infra/runpod || true
          wc -c infra/runpod/pod_config.json || true
          sed -n '1,200p' infra/runpod/pod_config.json || true

      - name: Launch or update pod
        shell: bash
        env:
          # Secrets
          RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
          HUGGINGFACE_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          GIT_PAT: ${{ secrets.GIT_PAT }}
        run: |
          set -euo pipefail
          echo "Launching pod '${POD_NAME}' (wait=${WAIT_READY_SECS}s, check_ports=${CHECK_PORTS}, idle=${IDLE_MINUTES}m)…"

          # Run the launcher; it prints POD_ID=… to GITHUB_OUTPUT on success
          python infra/runpod/launch_pod.py \
            --name "${POD_NAME}" \
            --wait-ready "${WAIT_READY_SECS}" \
            --check-ports "${CHECK_PORTS}" \
            --idle-minutes "${IDLE_MINUTES}"

      - name: Show POD_ID
        if: always()
        run: |
          echo "POD_ID from previous step (if set):"
          if [[ -f "$GITHUB_OUTPUT" ]]; then
            grep -E '^POD_ID=' "$GITHUB_OUTPUT" || true
          else
            echo "(no GITHUB_OUTPUT file present)"
          fi
